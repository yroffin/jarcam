{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home-page/home-page.component.css","webpack:///./src/app/components/home-page/home-page.component.html","webpack:///./src/app/components/home-page/home-page.component.ts","webpack:///./src/app/components/stl-view/stl-view.component.css","webpack:///./src/app/components/stl-view/stl-view.component.html","webpack:///./src/app/components/stl-view/stl-view.component.ts","webpack:///./src/app/components/three/cameras/cameras.component.ts","webpack:///./src/app/components/three/controls/controls.component.ts","webpack:///./src/app/components/three/lights/lights.component.ts","webpack:///./src/app/components/three/renderer/renderer.component.ts","webpack:///./src/app/components/three/scene/scene.component.ts","webpack:///./src/app/services/three/stl-loader.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACwB;AACH;AAE5E,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wFAAgB,EAAE;IACjD,EAAE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,OAAO;QACnB,SAAS,EAAE,MAAM;KAClB;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,2FAAiB,EAAE;CAC7C,CAAC;AAMF;IAAA;IAEA,CAAC;IAFY,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CAAC;YACpE,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAE5B;IAAD,uBAAC;CAAA;AAF4B;;;;;;;;;;;;AClB7B,iCAAiC,sBAAsB,KAAK,yBAAyB,qBAAqB,KAAK,6CAA6C,uX;;;;;;;;;;;ACA5J,iV;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,IAAI,CAAC;IACf,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACgC;AAExB;AACI;AACE;AACN;AAEqB;AACG;AACC;AACG;AACN;AACM;AACT;AAEH;AA2BvE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAgB;gBAChB,4FAAiB;gBACjB,6FAAgB;gBAChB,gGAAiB;gBACjB,0FAAe;gBACf,gGAAiB;gBACjB,uFAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,4FAAuB;gBACvB,oEAAa;gBACb,wEAAe;gBACf,0EAAgB;gBAChB,oEAAa;aACd;YACD,SAAS,EAAE;gBACT,oFAAgB;aACjB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/CtB,+DAA+D,mK;;;;;;;;;;;ACA/D,mB;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,0HAAyC;;SAE1C,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,+DAA+D,+J;;;;;;;;;;;ACA/D,gZ;;;;;;;;;;;;;;;;;;ACA+E;AACrC;AAC+B;AACrB;AAOpD;IAQE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IAED,6CAAkB,GAAlB;QACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAChD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,sCAAW,GAAX,UAAY,OAAO;QACjB,IAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACjC;IACH,CAAC;IAID,2CAAgB,GAAhB;QACE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAEM,iCAAM,GAAb;QACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC9D,CAAC;IAhCQ;QAAR,2DAAK,EAAE;;qDAAc;IACb;QAAR,2DAAK,EAAE;;oDAAgB;IACf;QAAR,2DAAK,EAAE;;mDAAe;IAEO;QAA7B,+DAAS,CAAC,oFAAiB,CAAC;wEAAoB,oFAAiB;+DAAC;IAoBnE;QAFC,kEAAY,CAAC,eAAe,CAAC;QAC7B,kEAAY,CAAC,+BAA+B,CAAC;;;;4DAK7C;IA9BU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,uHAAwC;;SAEzC,CAAC;;OACW,gBAAgB,CAmC5B;IAAD,uBAAC;CAAA;AAnC4B;;;;;;;;;;;;;;;;;;;ACVqB;AACZ;AAEP;AAK/B;IAHA;QAOkB,cAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,cAAS,GAAW,EAAE,CAAC;QACvB,SAAI,GAAW,GAAG,CAAC;QACnB,QAAG,GAAW,KAAK,CAAC;IAsCtB,CAAC;IAnCC,sBAAI,oCAAM;aAAV;YACE,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAClC,CAAC;;;OAAA;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,uDAAuB,CACvC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,GAAG,CAAC,CAAC;QAEZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CACtB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EACjB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EACjB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IAED,sCAAW,GAAX,UAAY,OAAO;QACjB,IAAM,SAAS,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;QAC9D,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;QAEjE,IAAI,SAAS,IAAI,UAAU,EAAE;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7C;IACH,CAAC;IAED,uCAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;SACtC;IACH,CAAC;IA1CQ;QAAR,2DAAK,EAAE;;oDAAgB;IACf;QAAR,2DAAK,EAAE;;mDAAe;IACd;QAAR,2DAAK,EAAE;;uDAA8B;IAJ3B,gBAAgB;QAH5B,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;SACrC,CAAC;OACW,gBAAgB,CA8C5B;IAAD,uBAAC;CAAA;AA9C4B;;;;;;;;;;;;;;;;;;;;;ACRgC;AACvB;AAEP;AAC+B;AAC9D,IAAM,aAAa,GAAG,iDAAqB,CAAC,kCAAK,CAAC,CAAC,CAAC,yCAAyC;AAK7F;IAHA;QAKW,YAAO,GAAY,IAAI,CAAC;IAgBnC,CAAC;IAZC,oCAAQ,GAAR;IACA,CAAC;IAED,yCAAa,GAAb,UAAc,MAAM,EAAE,QAAQ;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACvC,CAAC;IAED,0CAAc,GAAd,UAAe,KAAK,EAAE,MAAM;QAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IAdQ;QAAR,2DAAK,EAAE;;sDAAyB;IAFtB,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;SACjC,CAAC;OACW,iBAAiB,CAkB7B;IAAD,wBAAC;CAAA;AAlB6B;;;;;;;;;;;;;;;;;;;ACTQ;AAEP;AACW;AAK1C;IAQE;QANS,UAAK,GAAW,QAAQ,CAAC;IAOlC,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,gDAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,sDAAsB,CAAE,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,CAAE,CAAC;IACvE,CAAC;IAED,4CAAkB,GAAlB;IACA,CAAC;IAED,qCAAW,GAAX,UAAY,OAAO;QACjB,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE;YACnE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjC;IACH,CAAC;IAED,qCAAW,GAAX,UAAY,QAAQ;QAClB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CACrB,QAAQ,CAAC,CAAC,CAAC,EACX,QAAQ,CAAC,CAAC,CAAC,EACX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IA9BQ;QAAR,2DAAK,EAAE;;kDAA0B;IACzB;QAAR,2DAAK,EAAE;;qDAAoB;IAHjB,eAAe;QAH3B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;;OACW,eAAe,CAkC3B;IAAD,sBAAC;CAAA;AAlC2B;;;;;;;;;;;;;;;;;;;;;;;ACR0D;AACvD;AAC2B;AACS;AACU;AAC9C;AAK/B;IA6BE,2BAAoB,OAAmB,EAAU,gBAAkC;QAA/D,YAAO,GAAP,OAAO,CAAY;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAlB3E,YAAO,GAAG;YAChB,SAAS;YACT,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;gBACd,GAAG,EAAE,IAAI;aACV;YAED,QAAQ;YACR,UAAU,EAAE,KAAK;YACjB,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,KAAK;YAEb,MAAM,EAAE;gBACN,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aAC/B;SACF;QAGC,IAAI,CAAC,QAAQ,GAAG,IAAI,mDAAmB,CAAC;YACtC,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;QAEvC,IAAI,CAAC,GAAG,GAAG,IAAI,2CAAO,CAAC;YACrB,KAAK,EAAE,GAAG;YACV,SAAS,EAAE,IAAI;SAChB,CAAC;QAEF,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAGvD,IAAI,MAAM,GAAG,IAAI,CAAC;QAElB,IAAI,aAAa,GAAG;YAClB,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClC,iBAAiB;YACjB,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,cAAc,GAAG;YACnB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,qBAAqB,GAAG;YAC1B,mBAAmB;YACnB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC1C,qBAAqB;YACrB,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC9C,gBAAgB;YAChB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC1C,kBAAkB;YAClB,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;QACxC,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;QACvC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACvE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC;QAEhE,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC;QAC1C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAClF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAClF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAElF,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC;QACnD,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC;QACrE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC;QACpE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC;QAClE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC;IACnE,CAAC;IAED,gCAAI,GAAJ,UAAK,GAAW;QAAhB,iBAWC;QAVC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,EACpB,GAAG,EACH,UAAC,QAA8B;YAC7B,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QACvC,CAAC,EACD;QACA,CAAC,EACD;QACA,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,yCAAa,GAArB,UAAsB,KAAU;QAC9B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,sBAAI,oCAAK;aAAT;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAI,qCAAM;aAAV;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAC/B,CAAC;;;OAAA;IAEO,0CAAc,GAAtB;IACA,CAAC;IAED,uCAAW,GAAX,UAAY,OAAO;QACjB,IAAM,SAAS,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC;QAC9D,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;QACjE,IAAI,SAAS,IAAI,UAAU,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAChD;IACH,CAAC;IAED,8CAAkB,GAAlB;QACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/D;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,kCAAM,GAAN;QAAA,iBAcC;QAbC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACnE;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEpD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAEzB,qBAAqB,CAAC,cAAM,YAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC;IAC7C,CAAC;IApJQ;QAAR,2DAAK,EAAE;;qDAAgB;IACf;QAAR,2DAAK,EAAE;;oDAAe;IAEO;QAA7B,kEAAY,CAAC,qEAAc,CAAC;wEAAY,qEAAc;wDAAC;IACvB;QAAhC,kEAAY,CAAC,8EAAiB,CAAC;wEAAiB,8EAAiB;6DAAC;IANxD,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;+EA8B6B,wDAAU,EAA4B,0FAAgB;OA7BxE,iBAAiB,CAwJ7B;IAAD,wBAAC;CAAA;AAxJ6B;;;;;;;;;;;;;;;;;;;;;;;ACVwD;AAEvD;AACH;AAEoC;AACH;AAE7D;IAAA;IAIA,CAAC;IAAD,cAAC;AAAD,CAAC;AAKD;IAUE;QAgOQ,WAAM,GAAW,GAAG,CAAC;QACrB,WAAM,GAAW,EAAE,CAAC;QAhO1B,IAAI,CAAC,KAAK,GAAG,IAAI,2CAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,gDAAgB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QAE9C,YAAY;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,2CAAW,CAAC,IAAI,6CAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,iDAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjC,cAAc;QACd,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,2CAAW,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,yCAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAKD,iCAAQ,GAAR;IACA,CAAC;IAED,sBAAI,kCAAM;aAAV;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAChC,CAAC;;;OAAA;IAED,2CAAkB,GAAlB;QACE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAM,MAAM,GAAG,EACd,CAAC;QAEF,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;YAApB,IAAI,IAAI;YACX,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC7B;iBAAM,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9B;SACF;IACH,CAAC;IAED,yCAAgB,GAAhB,UAAiB,gBAAsC;QACrD,kEAAkE;QAClE;YAA+B,0EAAuB;YAAtD;;YAIA,CAAC;YAHQ,6CAAkB,GAAzB;gBACE,OAAO,IAAI,CAAC;YACd,CAAC;YACH,uBAAC;QAAD,CAAC,CAJ8B,uDAAuB,GAIrD;QAED,IAAI,QAAQ,GAAG,IAAI,8CAAc,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;QACzE,QAAQ,CAAC,oBAAoB,EAAE,CAAC;QAEhC,IAAI,QAAQ,GAAG,IAAI,gBAAgB,CAAC;YAClC,MAAM,EAAE,IAAI;YACZ,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,GAAG;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,IAAI,6CAAa,EAAE;QAE3B,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,6CAAa,EAAE,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,6CAAa,EAAE,CAAC,aAAa,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,6CAAa,EAAE,CAAC,aAAa,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,6CAAa,EAAE,CAAC,aAAa,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,6CAAa,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE1D,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;QACvB,QAAQ,CAAC,WAAW,CAAC;YACnB,QAAQ,CAAC,kBAAkB,EAAE;YAC7B,IAAI,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,CAAC,GAAG,IAAI,6CAAa,EAAE;YAC3B,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,6CAAa,EAAE,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC3E,OAAO,CAAC;QACV,CAAC,EAAE,CAAC;QAEJ,IAAI,CAAC,IAAI,GAAG,IAAI,0CAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAE5B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEM,sCAAa,GAApB,UAAqB,KAAU;QAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAEM,uCAAc,GAArB,UAAsB,KAAU;QAAhC,iBAkEC;QAjEC,IAAI,IAAI,GAAoB,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;QAEvC,0BAA0B;QAC1B,IAAI,IAAI,GAAkB,6CAAQ,CAAkB,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC,KAAK,EAAE,UAAC,IAAiB;YAC/F,IAAI,EAAE,GAAG,IAAI,2CAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,EAAE,GAAG,IAAI,2CAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,EAAE,GAAG,IAAI,2CAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,OAAO,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACzG,CAAC,CAAC,CAAC;QAEH,qCAAqC;QACrC,IAAI,QAAQ,GAAc,EAAE,CAAC;QAC7B,2CAAM,CAAC,IAAI,EAAE,UAAC,IAAI;YAChB,IAAI,EAAE,GAAG,IAAI,2CAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,EAAE,GAAG,IAAI,2CAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,EAAE,GAAG,IAAI,2CAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,GAAG,GAAoB,EAAE,CAAC;YAC9B,IAAI,MAAM,CAAC;YACX,MAAM,GAAG,IAAI,6CAAa,EAAE,CAAC;YAC7B,IAAI,EAAE,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC9C,IAAI,EAAE;gBAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,GAAG,IAAI,6CAAa,EAAE,CAAC;YAC7B,IAAI,EAAE,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC9C,IAAI,EAAE;gBAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,MAAM,GAAG,IAAI,6CAAa,EAAE,CAAC;YAC7B,IAAI,EAAE,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC9C,IAAI,EAAE;gBAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEzB,UAAU;YACV,QAAQ,CAAC,IAAI,CAAC;gBACZ,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;gBACb,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;gBACX,MAAM,EAAE,KAAK;aACd,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,2CAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,KAAK;YACvB,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,iBAAiB;QACjB,IAAI,KAAgB,CAAC;QACrB,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;;YAGnC,IAAI,QAAQ,GAAG,IAAI,8CAAc,EAAE,CAAC;YACpC,2CAAM,CAAC,KAAK,EAAE,UAAC,IAAa;gBAC1B,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,GAAG,IAAI,kDAAkB,CAAC,QAAQ,EAAE,IAAI,uDAAuB,CAAC;gBACtE,KAAK,EAAE,QAAQ;gBACf,SAAS,EAAE,EAAE;aACd,CAAC,CAAC;YAEH,OAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,OAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAErB,kBAAkB;YAClB,KAAK,GAAG,OAAK,aAAa,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;;QAlBD,OAAO,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;;SAkB/B;IACH,CAAC;IAED,sCAAa,GAAb,UAAc,QAAmB;QAC/B,IAAI,KAAK,GAAc,EAAE,CAAC;QAC1B,IAAI,OAAO,GAAG,2CAAM,CAAC,QAAQ,EAAE,UAAC,OAAO;YACrC,OAAO,OAAO,CAAC,MAAM,KAAK,KAAK,CAAC;QAClC,CAAC,CAAC;QACF,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YACtB,OAAO,OAAO,EAAE;gBACd,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpB,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aAC5C;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,iCAAQ,GAAR,UAAS,OAAgB,EAAE,QAAmB;QAA9C,iBAyBC;QAxBC,IAAI,WAAW,GAAG,2CAAM,CAAC,QAAQ,EAAE,UAAC,EAAW;YAC7C,IAAI,EAAE,CAAC,MAAM,KAAK,IAAI;gBAAE,OAAO,KAAK,CAAC;YACrC,OAAO,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QACH,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;YAC1B,OAAO;gBACL,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,GAAG,EAAE,WAAW,CAAC,GAAG;gBACpB,MAAM,EAAE,IAAI;aACb,CAAC;SACH;QACD,IAAI,SAAS,GAAG,2CAAM,CAAC,QAAQ,EAAE,UAAC,EAAW;YAC3C,IAAI,EAAE,CAAC,MAAM,KAAK,IAAI;gBAAE,OAAO,KAAK,CAAC;YACrC,OAAO,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;YACxB,OAAO;gBACL,KAAK,EAAE,SAAS,CAAC,GAAG;gBACpB,GAAG,EAAE,SAAS,CAAC,KAAK;gBACpB,MAAM,EAAE,IAAI;aACb,CAAC;SACH;IACH,CAAC;IAED,gCAAO,GAAP,UAAQ,IAAmB,EAAE,KAAoB;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK;eAC9G,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK;eAC5G,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IACpH,CAAC;IAED,kCAAS,GAAT,UAAU,MAAe;QACI,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC,SAAS,GAAG,MAAM,CAAC;IACpE,CAAC;IAED,gCAAO,GAAP,UAAQ,MAAe;QACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,QAAQ,GAAG,IAAI,wDAAwB,EAAE,CAAC;YAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,0CAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,GAAG,IAAI,uDAAuB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7B;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;IAC/B,CAAC;IAQD,6BAAI,GAAJ,UAAK,MAAe;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,aAAa,GAAG,IAAI,sDAAsB,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAEpF,IAAI,aAAa,GAAG,IAAI,uDAAuB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrE,IAAI,aAAa,GAAG,IAAI,sDAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACtF,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAU,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC9D,IAAI,UAAU,GAAG,IAAI,0CAAU,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC/B,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE/B,IAAI,aAAa,GAAG,IAAI,uDAAuB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrE,IAAI,aAAa,GAAG,IAAI,sDAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACtF,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAU,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC9D,IAAI,UAAU,GAAG,IAAI,0CAAU,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC/B,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;YAC5C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE/B,IAAI,aAAa,GAAG,IAAI,uDAAuB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrE,IAAI,aAAa,GAAG,IAAI,sDAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACtF,IAAI,CAAC,SAAS,GAAG,IAAI,0CAAU,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC9D,IAAI,UAAU,GAAG,IAAI,0CAAU,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG;YAC/C,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;YAC5C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC;IAClC,CAAC;IAIM,mCAAU,GAAjB,UAAkB,MAAe;QAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,0CAAU,CAC1B,IAAI,mDAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,EACjC,IAAI,uDAAuB,CAAC;gBAC1B,KAAK,EAAE,QAAQ;gBACf,WAAW,EAAE,IAAI;gBACjB,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,gDAAgB;aACvB,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7B;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;IAC/B,CAAC;IAKM,kCAAS,GAAhB,UAAiB,MAAe;QAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC;QAClC,2CAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,KAAqB;YACvC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAtR+B;QAA/B,kEAAY,CAAC,2EAAgB,CAAC;wEAAa,2EAAgB;sDAAC;IAC9B;QAA9B,kEAAY,CAAC,wEAAe,CAAC;wEAAa,wEAAe;sDAAC;IA3BhD,cAAc;QAH1B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;SACxB,CAAC;;OACW,cAAc,CAiT1B;IAAD,qBAAC;CAAA;AAjT0B;;;;;;;;;;;;;;;;;;;AClBgB;AACZ;AAK/B;IAmCE;IACA,CAAC;IAEM,kCAAO,GAAd,UAAe,KAAkB,EAAE,GAAG,EAAE,SAAmD,EAAE,UAAU,EAAE,OAAO;QAC9G,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,QAAQ;YACtB,SAAS,CAAC,QAAQ,CAAC,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;IAEO,+BAAI,GAAZ,UAAa,gBAAgB,EAAE,MAAM,EAAE,UAAW,EAAE,OAAQ;QAC1D,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,wCAAwC;QACxC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACxC,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC;QACjC,GAAG,CAAC,kBAAkB,GAAG;YACvB,IAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,EAAE;gBAC/B,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;oBACpB,IAAI,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC9C,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACzC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAClB;qBAAM;oBACL,MAAM,IAAI,KAAK,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,GAAG,uBAAuB,GAAG,gBAAgB,CAAC,CAAC;iBAC1F;aACF;QACH,CAAC,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAEO,gCAAK,GAAb,UAAc,IAAI;QAEhB,IAAI,QAAQ,GAAG;YAEb,IAAI,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC;YACvC,MAAM,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC/B,SAAS,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACzD,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACrC,MAAM,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC;YAE/C,IAAI,MAAM,KAAK,MAAM,CAAC,UAAU,EAAE;gBAEhC,OAAO,IAAI,CAAC;aAEb;YAED,qEAAqE;YACrE,sEAAsE;YACtE,uDAAuD;YAEvD,sDAAsD;YACtD,IAAI,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAE1B,gEAAgE;gBAChE,kDAAkD;gBAElD,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC;oBAAE,OAAO,IAAI,CAAC;aAExD;YAED,4DAA4D;YAC5D,OAAO,KAAK,CAAC;QAEf,CAAC,CAAC;QAEF,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAEtC,OAAO,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3F,CAAC;IAEO,sCAAW,GAAnB,UAAoB,IAAI;QAEtB,IAAI,MAAM,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAEvC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE,MAAM,CAAC;QACvC,IAAI,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC;QAExC,qBAAqB;QACrB,6DAA6D;QAE7D,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE;YAE5C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC;gBACzD,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;gBAC5C,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;gBAE9C,SAAS,GAAG,IAAI,CAAC;gBACjB,MAAM,GAAG,EAAE,CAAC;gBAEZ,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC5C,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC5C,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC5C,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;aAE1C;SAEF;QAED,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,UAAU,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;QAE5B,IAAI,QAAQ,GAAG,IAAI,oDAAoB,EAAE,CAAC;QAE1C,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,EAAE;YAEvC,IAAI,KAAK,GAAG,UAAU,GAAG,IAAI,GAAG,UAAU,CAAC;YAC3C,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC7C,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACjD,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YAEjD,IAAI,SAAS,EAAE;gBAEb,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;gBAErD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;oBAEhC,iCAAiC;oBAEjC,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBAC9B,CAAC,GAAG,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBACrC,CAAC,GAAG,CAAC,CAAC,WAAW,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;iBAEvC;qBAAM;oBAEL,CAAC,GAAG,QAAQ,CAAC;oBACb,CAAC,GAAG,QAAQ,CAAC;oBACb,CAAC,GAAG,QAAQ,CAAC;iBAEd;aAEF;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAE3B,IAAI,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;gBAEjC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;gBACpD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;gBACxD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;gBAExD,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;gBAExC,IAAI,SAAS,EAAE;oBAEb,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBAEtB;aAEF;SAEF;QAED,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,qDAAqB,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5F,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,qDAAqB,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEzF,IAAI,SAAS,EAAE;YACb,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,qDAAqB,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvF,6BAA6B;YAC7B,0BAA0B;SAC3B;QAED,OAAO,QAAQ,CAAC;IAElB,CAAC;IAEO,qCAAU,GAAlB,UAAmB,IAAI;QAErB,IAAI,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC;QAC9E,QAAQ,GAAG,IAAI,oDAAoB,EAAE,CAAC;QACtC,WAAW,GAAG,0BAA0B,CAAC;QAEzC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,IAAI,MAAM,GAAG,IAAI,6CAAa,EAAE,CAAC;QAEjC,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;YAEjD,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACjB,aAAa,GAAG,yJAAyJ,CAAC;YAE1K,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;gBAEnD,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAElC;YAED,aAAa,GAAG,yJAAyJ,CAAC;YAE1K,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;gBAEnD,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAE5C;SAEF;QAED,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,qDAAqB,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5F,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,qDAAqB,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEzF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEO,uCAAY,GAApB,UAAqB,GAAG;QAEtB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAE3B,IAAI,YAAY,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;YACvC,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;gBAEvC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mCAAmC;aAEzF;YACD,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAE1B;aAAM;YAEL,OAAO,GAAG,CAAC;SAEZ;IAEH,CAAC;IAEO,uCAAY,GAApB,UAAqB,GAAG;QAEtB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAE3B,IAAI,YAAY,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAEnC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,mCAAmC;aAEhF;YACD,OAAO,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC;SAE5C;aAAM;YAEL,OAAO,GAAG,CAAC;SAEZ;IAEH,CAAC;IA7RU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,gBAAgB,CA+R5B;IAAD,uBAAC;CAAA;AA/R4B;;;;;;;;;;;;;ACN7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { StlViewComponent } from './components/stl-view/stl-view.component';\n\nconst appRoutes: Routes = [\n  { path: 'stl-view', component: StlViewComponent },\n  { path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  { path: '**', component: HomePageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, { enableTracing: false })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","module.exports = \".example-icon {\\n    padding: 0 14px;\\n  }\\n  \\n  .example-spacer {\\n    flex: 1 1 auto;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7R0FDakI7O0VBRUQ7SUFDRSxlQUFlO0dBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1pY29uIHtcbiAgICBwYWRkaW5nOiAwIDE0cHg7XG4gIH1cbiAgXG4gIC5leGFtcGxlLXNwYWNlciB7XG4gICAgZmxleDogMSAxIGF1dG87XG4gIH0iXX0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <mat-icon class=\\\"example-icon\\\" routerLink=\\\"/\\\">home</mat-icon>\\n    <span class=\\\"example-spacer\\\"></span>\\n    <mat-icon class=\\\"example-icon\\\" routerLink=\\\"/stl-view\\\">map</mat-icon>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { StlViewComponent } from './components/stl-view/stl-view.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { CamerasComponent } from './components/three/cameras/cameras.component';\nimport { ControlsComponent } from './components/three/controls/controls.component';\nimport { LightsComponent } from './components/three/lights/lights.component';\nimport { RendererComponent } from './components/three/renderer/renderer.component';\nimport { SceneComponent } from './components/three/scene/scene.component';\n\nimport { StlLoaderService } from './services/three/stl-loader.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StlViewComponent,\n    HomePageComponent,\n    CamerasComponent,\n    ControlsComponent,\n    LightsComponent,\n    RendererComponent,\n    SceneComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule\n  ],\n  providers: [\n    StlLoaderService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS1wYWdlL2hvbWUtcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc3RsLXZpZXcvc3RsLXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<three-renderer [height]=\\\"height\\\" [width]=\\\"800\\\">\\n  <three-orbit-controls [enabled]=\\\"true\\\">\\n  </three-orbit-controls>\\n  <three-scene>\\n    <three-perspective-camera [height]=\\\"height\\\" [width]=\\\"width\\\" [positions]=\\\"[-50, 0, 0]\\\">\\n    </three-perspective-camera>\\n    <three-point-light [position]=\\\"[0, 100, 0]\\\"></three-point-light>\\n  </three-scene>\\n</three-renderer>\"","import { Component, OnInit, OnChanges, AfterContentInit } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { RendererComponent } from '../three/renderer/renderer.component';\nimport { HostListener, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-stl-view',\n  templateUrl: './stl-view.component.html',\n  styleUrls: ['./stl-view.component.css']\n})\nexport class StlViewComponent implements OnInit, OnChanges, AfterContentInit {\n\n  @Input() ngModel: any;\n  @Input() height: number;\n  @Input() width: number;\n\n  @ViewChild(RendererComponent) rendererComponent: RendererComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterContentInit() {\n    this.rendererComponent.load('/assets/cube.stl');\n    this.resetWidthHeight();\n  }\n\n  ngOnChanges(changes) {\n    if(changes.ngModel && changes.ngModel.currentValue) {\n      console.log('changes', changes);\n    }\n  }\n\n  @HostListener('window:resize')\n  @HostListener('window:vrdisplaypresentchange')\n  resetWidthHeight() {\n    this.height = window.innerHeight;\n    this.width = window.innerWidth;\n    console.log('window resize', this.width, this.height);\n  }\n\n  public toggle() {\n    this.rendererComponent.load('/assets/sittingMeerkat_L.stl');\n  }\n}\n","import { Directive, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\n\nimport * as THREE from 'three';\n\n@Directive({\n  selector: 'three-perspective-camera'\n})\nexport class CamerasComponent implements OnInit {\n\n  @Input() height: number;\n  @Input() width: number;\n  @Input() public positions = [0, 0, 0];\n\n  viewAngle: number = 75;\n  near: number = 0.1;\n  far: number = 10000;\n  camera: THREE.PerspectiveCamera;\n\n  get aspect(): number {\n    return this.height / this.width;\n  }\n\n  ngOnInit() {\n    this.camera = new THREE.PerspectiveCamera(\n      this.viewAngle,\n      this.aspect,\n      this.near,\n      this.far);\n\n    this.camera.position.set(\n      this.positions[0],\n      this.positions[1],\n      this.positions[2]);\n\n      this.updateAspect(this.width / this.height);\n  }\n\n  ngOnChanges(changes) {\n    const widthChng = changes.width && changes.width.currentValue;\n    const heightChng = changes.height && changes.height.currentValue;\n\n    if (widthChng || heightChng) {\n      this.updateAspect(this.width / this.height);\n    }\n  }\n\n  updateAspect(ratio) {\n    if (this.camera) {\n      this.camera.aspect = ratio;\n      this.camera.updateProjectionMatrix();\n    }\n  }\n\n}\n","import { Component, OnInit, Directive } from '@angular/core';\nimport { Input } from '@angular/core';\n\nimport * as THREE from 'three';\nimport * as OrbitControlsFunction from 'three-orbit-controls'; \nconst OrbitControls = OrbitControlsFunction(THREE); // OrbitControls is now your constructor \n\n@Directive({\n  selector: 'three-orbit-controls'\n})\nexport class ControlsComponent implements OnInit {\n\n  @Input() enabled: boolean = true;\n\n  controls: THREE.OrbitControls;\n\n  ngOnInit() {\n  }\n\n  setupControls(camera, renderer) {\n    this.controls = new OrbitControls(camera, renderer.domElement);\n    this.controls.enabled = this.enabled;\n  }\n\n  updateControls(scene, camera) {\n    this.controls.update();\n  }\n\n}\n","import { Component, OnInit, AfterContentInit } from '@angular/core';\nimport { Input } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'three-point-light'\n})\nexport class LightsComponent implements OnInit, AfterContentInit {\n\n  @Input() color: number = 0xffffff;\n  @Input() position: number[];\n\n  public light: THREE.PointLight;\n  public helper: THREE.PointLightHelper;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.light = new THREE.PointLight(this.color, 1, 1000);\n    this.setPosition(this.position);\n    this.helper = new THREE.PointLightHelper( this.light, 10, 0xff0000 );\n  }\n\n  ngAfterContentInit() {\n  }\n\n  ngOnChanges(changes) {\n    if (this.light && changes.position && changes.position.currentValue) {\n      this.setPosition(this.position);\n    }\n  }\n\n  setPosition(position) {\n    console.log('pisition', position);\n    this.light.position.set(\n      position[0],\n      position[1],\n      position[2]);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Directive, ElementRef, Input, ContentChild, ViewChild } from '@angular/core';\nimport * as THREE from 'three';\nimport { SceneComponent } from '../scene/scene.component';\nimport { ControlsComponent } from '../controls/controls.component';\nimport { StlLoaderService } from 'src/app/services/three/stl-loader.service';\nimport * as dat from 'dat.gui';\n\n@Directive({\n  selector: 'three-renderer'\n})\nexport class RendererComponent {\n\n  @Input() height: number;\n  @Input() width: number;\n\n  @ContentChild(SceneComponent) sceneComp: SceneComponent;\n  @ContentChild(ControlsComponent) orbitComponent: ControlsComponent;\n\n  private renderer: THREE.WebGLRenderer;\n  private gui: any;\n\n  private options = {\n    // layers\n    layer: {\n      visible: false,\n      top: 4000,\n    },\n\n    // debug\n    axesHelper: false,\n    wireframe: false,\n    normals: false,\n    ground: false,\n\n    camera: {\n      position: { x: 0, y: 0, z: 0 },\n    },\n  }\n\n  constructor(private element: ElementRef, private stlLoaderService: StlLoaderService) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    this.renderer.shadowMap.enabled = true;\n\n    this.gui = new dat.GUI({\n      width: 400,\n      autoPlace: true\n    })\n\n    element.nativeElement.appendChild(this.gui.domElement);\n\n\n    let target = this;\n\n    let onLayerChange = function () {\n      target.onLayerChange(this.object);\n      // activate layer\n      target.scene.showLayer(this.object.visible);\n    }\n\n    let onCameraChange = function () {\n      target.camera.position.x = this.object.x;\n      target.camera.position.y = this.object.y;\n      target.camera.position.z = this.object.z;\n    }\n\n    let updateDebugVisibility = function () {\n      // activate normals\n      target.scene.normals(this.object.normals);\n      // activate wireframe\n      target.scene.wireframe(this.object.wireframe);\n      // activate axis\n      target.scene.axis(this.object.axesHelper);\n      // activate ground\n      target.scene.showGround(this.object.ground);\n    }\n\n    let layers = this.gui.addFolder('Layer')\n    let layer = layers.addFolder('Control')\n    layer.add(this.options.layer, 'top', 0, 10000).onChange(onLayerChange);\n    layer.add(this.options.layer, 'visible').onChange(onLayerChange)\n\n    let cameras = this.gui.addFolder('Camera')\n    let camera = cameras.addFolder('Position')\n    camera.add(this.options.camera.position, 'x', -500, 500).onChange(onCameraChange);\n    camera.add(this.options.camera.position, 'y', -500, 500).onChange(onCameraChange);\n    camera.add(this.options.camera.position, 'z', -500, 500).onChange(onCameraChange);\n\n    let debug = this.gui.addFolder('Debugging Options')\n    debug.add(this.options, 'axesHelper').onChange(updateDebugVisibility)\n    debug.add(this.options, 'wireframe').onChange(updateDebugVisibility)\n    debug.add(this.options, 'normals').onChange(updateDebugVisibility)\n    debug.add(this.options, 'ground').onChange(updateDebugVisibility)\n  }\n\n  load(url: string) {\n    this.stlLoaderService.loadStl(\n      this.sceneComp.scene,\n      url,\n      (geometry: THREE.BufferGeometry) => {\n        this.scene.setGeometryPiece(geometry)\n      },\n      () => {\n      },\n      () => {\n      });\n  }\n\n  private onLayerChange(layer: any) {\n    this.scene.onLayerChange(layer);\n  }\n\n  get scene() {\n    return this.sceneComp;\n  }\n\n  get camera() {\n    return this.sceneComp.camera;\n  }\n\n  private onObjectLoaded() {\n  }\n\n  ngOnChanges(changes) {\n    const widthChng = changes.width && changes.width.currentValue;\n    const heightChng = changes.height && changes.height.currentValue;\n    if (widthChng || heightChng) {\n      console.log('resize', this.width, this.height)\n      this.renderer.setSize(this.width, this.height);\n    }\n  }\n\n  ngAfterContentInit() {\n    this.element.nativeElement.appendChild(this.renderer.domElement);\n    this.renderer.setPixelRatio(Math.floor(window.devicePixelRatio));\n    this.renderer.setSize(this.width, this.height);\n\n    if (this.orbitComponent) {\n      this.orbitComponent.setupControls(this.camera, this.renderer);\n    }\n\n    this.render();\n  }\n\n  render() {\n    if (this.orbitComponent) {\n      this.orbitComponent.updateControls(this.scene.scene, this.camera);\n    }\n\n    this.camera.lookAt(this.scene.scene.position);\n    this.renderer.render(this.scene.scene, this.camera);\n\n    this.options.camera.position.x = this.camera.position.x;\n    this.options.camera.position.y = this.camera.position.y;\n    this.options.camera.position.z = this.camera.position.z;\n    this.gui.updateDisplay();\n\n    requestAnimationFrame(() => this.render());\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Directive, ElementRef, Input, ContentChild, ViewChild } from '@angular/core';\n\nimport * as THREE from 'three';\nimport * as _ from 'lodash';\n\nimport { CamerasComponent } from '../cameras/cameras.component';\nimport { LightsComponent } from '../lights/lights.component';\n\nclass Segment {\n  start: THREE.Vector3;\n  end: THREE.Vector3;\n  linked: boolean;\n}\n\n@Directive({\n  selector: 'three-scene'\n})\nexport class SceneComponent implements OnInit {\n\n  public scene: THREE.Scene;\n\n  private mesh: THREE.Mesh;\n  private slice: THREE.Object3D[];\n\n  private normal: THREE.Mesh;\n  private helper: THREE.FaceNormalsHelper;\n\n  constructor() {\n    this.scene = new THREE.Scene();\n    this.scene.add(new THREE.GridHelper(500, 50));\n\n    // Add layer\n    this.layer = new THREE.Plane(new THREE.Vector3(0, -1, 0), 0);\n    this.layerHelper = new THREE.PlaneHelper(this.layer, 1, 0xffff00);\n    this.scene.add(this.layerHelper);\n\n    // slice group\n    this.slice = [];\n\n    this.scene.background = new THREE.Color().setHSL(0.6, 0, 1);\n    this.scene.fog = new THREE.Fog(0xffffff, 1, 5000);\n  }\n\n  @ContentChild(CamerasComponent) cameraComp: CamerasComponent;\n  @ContentChild(LightsComponent) lightComps: LightsComponent;\n\n  ngOnInit() {\n  }\n\n  get camera() {\n    return this.cameraComp.camera;\n  }\n\n  ngAfterContentInit() {\n    this.camera.lookAt(this.scene.position);\n    this.scene.add(this.camera);\n    this.scene.add(this.lightComps.light);\n    this.scene.add(this.lightComps.helper);\n\n    const meshes = [\n    ];\n\n    for (let mesh of meshes) {\n      if (mesh.object) {\n        this.scene.add(mesh.object);\n      } else if (mesh.attachScene) {\n        mesh.attachScene(this.scene);\n      }\n    }\n  }\n\n  setGeometryPiece(originalGeometry: THREE.BufferGeometry) {\n    // Cf. https://threejs.org/docs/#api/en/materials/MeshToonMaterial\n    class MeshToonMaterial extends THREE.MeshPhongMaterial {\n      public isMeshToonMaterial(): boolean {\n        return true;\n      }\n    }\n\n    let geometry = new THREE.Geometry().fromBufferGeometry(originalGeometry);\n    geometry.computeVertexNormals();\n\n    let material = new MeshToonMaterial({\n      lights: true,\n      transparent: true,\n      opacity: 0.5,\n    });\n\n    let m = new THREE.Matrix4()\n\n    m = m.premultiply(new THREE.Matrix4().makeRotationX(-Math.PI / 2));\n    m = m.premultiply(new THREE.Matrix4().makeRotationX(0 / 180 * Math.PI));\n    m = m.premultiply(new THREE.Matrix4().makeRotationY(0 / 180 * Math.PI));\n    m = m.premultiply(new THREE.Matrix4().makeRotationZ(0 / 180 * Math.PI));\n    m = m.premultiply(new THREE.Matrix4().makeScale(1, 1, 1));\n\n    geometry.applyMatrix(m)\n    geometry.applyMatrix(function () {\n      geometry.computeBoundingBox()\n      let minX = geometry.boundingBox.min.x\n      let minY = geometry.boundingBox.min.y\n      let minZ = geometry.boundingBox.min.z\n      let m = new THREE.Matrix4()\n      m = m.premultiply(new THREE.Matrix4().makeTranslation(-minX, -minY, -minZ))\n      return m\n    }())\n\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.mesh.name = 'piece';\n    this.mesh.receiveShadow = true;\n    this.mesh.castShadow = true;\n\n    console.log('setPiece', this.mesh);\n    this.scene.add(this.mesh);\n  }\n\n  public onLayerChange(layer: any) {\n    this.planeIntersect(layer);\n  }\n\n  public planeIntersect(layer: any) {\n    let mesh = (<THREE.Geometry>this.mesh.geometry);\n    this.layer.constant = layer.top / 1000;\n\n    // find all matching faces\n    let keep: THREE.Face3[] = _.filter((<THREE.Geometry>this.mesh.geometry).faces, (face: THREE.Face3) => {\n      let l1 = new THREE.Line3(mesh.vertices[face.a], mesh.vertices[face.b]);\n      let l2 = new THREE.Line3(mesh.vertices[face.b], mesh.vertices[face.c]);\n      let l3 = new THREE.Line3(mesh.vertices[face.c], mesh.vertices[face.a]);\n      return this.layer.intersectsLine(l1) || this.layer.intersectsLine(l2) || this.layer.intersectsLine(l3);\n    });\n\n    // find all intersections as segments\n    let segments: Segment[] = [];\n    _.each(keep, (face) => {\n      let l1 = new THREE.Line3(mesh.vertices[face.a], mesh.vertices[face.b]);\n      let l2 = new THREE.Line3(mesh.vertices[face.b], mesh.vertices[face.c]);\n      let l3 = new THREE.Line3(mesh.vertices[face.c], mesh.vertices[face.a]);\n      let arr: THREE.Vector3[] = [];\n      let output;\n      output = new THREE.Vector3();\n      let i1 = this.layer.intersectLine(l1, output);\n      if (i1) arr.push(output);\n      output = new THREE.Vector3();\n      let i2 = this.layer.intersectLine(l2, output);\n      if (i2) arr.push(output);\n      output = new THREE.Vector3();\n      let i3 = this.layer.intersectLine(l3, output);\n      if (i3) arr.push(output);\n\n      // push it\n      segments.push({\n        start: arr[0],\n        end: arr[1],\n        linked: false\n      });\n    });\n\n    // remove previous slicing object\n    _.each(this.slice, (child) => {\n      this.scene.remove(child);\n    });\n    this.slice = [];\n\n    // Find all chain\n    let chain: Segment[];\n    chain = this.findNextChain(segments);\n    while (chain && chain.length > 0) {\n\n      let geometry = new THREE.Geometry();\n      _.each(chain, (line: Segment) => {\n        geometry.vertices.push(line.start);\n        geometry.vertices.push(line.end);\n      });\n\n      let line = new THREE.LineSegments(geometry, new THREE.LineBasicMaterial({\n        color: 0x3949AB,\n        linewidth: 10,\n      }))\n\n      this.slice.push(line);\n      this.scene.add(line);\n\n      // Find next chain\n      chain = this.findNextChain(segments);\n    }\n  }\n\n  findNextChain(segments: Segment[]): Segment[] {\n    let chain: Segment[] = [];\n    let current = _.find(segments, (segment) => {\n      return segment.linked === false;\n    })\n    if (current) {\n      current.linked = true;\n      while (current) {\n        chain.push(current);\n        current = this.findNext(current, segments);\n      }\n    }\n    return chain;\n  }\n\n  findNext(current: Segment, segments: Segment[]): Segment {\n    let nextByStart = _.find(segments, (it: Segment) => {\n      if (it.linked === true) return false;\n      return this.compare(current.end, it.start);\n    });\n    if (nextByStart) {\n      nextByStart.linked = true;\n      return {\n        start: nextByStart.start,\n        end: nextByStart.end,\n        linked: true\n      };\n    }\n    let nextByEnd = _.find(segments, (it: Segment) => {\n      if (it.linked === true) return false;\n      return this.compare(current.end, it.end);\n    });\n    if (nextByEnd) {\n      nextByEnd.linked = true;\n      return {\n        start: nextByEnd.end,\n        end: nextByEnd.start,\n        linked: true\n      };\n    }\n  }\n\n  compare(left: THREE.Vector3, right: THREE.Vector3): boolean {\n    return Math.round(left.x * 10000 + Number.EPSILON) / 10000 === Math.round(right.x * 10000 + Number.EPSILON) / 10000\n      && Math.round(left.y * 10000 + Number.EPSILON) / 10000 === Math.round(right.y * 10000 + Number.EPSILON) / 10000\n      && Math.round(left.z * 10000 + Number.EPSILON) / 10000 === Math.round(right.z * 10000 + Number.EPSILON) / 10000;\n  }\n\n  wireframe(enable: boolean) {\n    (<THREE.MeshNormalMaterial>this.mesh.material).wireframe = enable;\n  }\n\n  normals(enable: boolean) {\n    if (!this.helper) {\n      let material = new THREE.MeshNormalMaterial();\n      this.normal = new THREE.Mesh(this.mesh.geometry, material);\n      this.helper = new THREE.FaceNormalsHelper(this.normal, 2, 0x00ff00, 1);\n      this.scene.add(this.helper);\n    }\n    this.helper.visible = enable;\n    this.normal.visible = enable;\n  }\n\n  private radius: number = 0.5;\n  private height: number = 50;\n  private xAxisMesh: THREE.Mesh;\n  private yAxisMesh: THREE.Mesh;\n  private zAxisMesh: THREE.Mesh;\n\n  axis(enable: boolean) {\n    if (!this.xAxisMesh) {\n      let arrowGeometry = new THREE.CylinderGeometry(0, 2 * this.radius, this.height / 5);\n\n      let xAxisMaterial = new THREE.MeshBasicMaterial({ color: 0xFF0000 });\n      let xAxisGeometry = new THREE.CylinderGeometry(this.radius, this.radius, this.height);\n      this.xAxisMesh = new THREE.Mesh(xAxisGeometry, xAxisMaterial);\n      let xArrowMesh = new THREE.Mesh(arrowGeometry, xAxisMaterial);\n      this.xAxisMesh.add(xArrowMesh);\n      xArrowMesh.position.y += this.height / 2;\n      this.xAxisMesh.rotation.z -= 90 * Math.PI / 180;\n      this.xAxisMesh.position.x += this.height / 2;\n      this.scene.add(this.xAxisMesh);\n\n      let yAxisMaterial = new THREE.MeshBasicMaterial({ color: 0x00FF00 });\n      let yAxisGeometry = new THREE.CylinderGeometry(this.radius, this.radius, this.height);\n      this.yAxisMesh = new THREE.Mesh(yAxisGeometry, yAxisMaterial);\n      let yArrowMesh = new THREE.Mesh(arrowGeometry, yAxisMaterial);\n      this.yAxisMesh.add(yArrowMesh);\n      yArrowMesh.position.y += this.height / 2\n      this.yAxisMesh.position.y += this.height / 2\n      this.scene.add(this.yAxisMesh);\n\n      let zAxisMaterial = new THREE.MeshBasicMaterial({ color: 0x0000FF });\n      let zAxisGeometry = new THREE.CylinderGeometry(this.radius, this.radius, this.height);\n      this.zAxisMesh = new THREE.Mesh(zAxisGeometry, zAxisMaterial);\n      let zArrowMesh = new THREE.Mesh(arrowGeometry, zAxisMaterial);\n      this.zAxisMesh.add(zArrowMesh);\n      this.zAxisMesh.rotation.x += 90 * Math.PI / 180\n      zArrowMesh.position.y += this.height / 2\n      this.zAxisMesh.position.z += this.height / 2\n      this.scene.add(this.zAxisMesh);\n    }\n    this.xAxisMesh.visible = enable;\n    this.yAxisMesh.visible = enable;\n    this.zAxisMesh.visible = enable;\n  }\n\n  private ground: THREE.Mesh;\n\n  public showGround(enable: boolean) {\n    if (!this.ground) {\n      this.ground = new THREE.Mesh(\n        new THREE.PlaneGeometry(500, 500),\n        new THREE.MeshBasicMaterial({\n          color: 0xFF0000,\n          transparent: true,\n          opacity: 0.3,\n          side: THREE.DoubleSide,\n        }));\n      this.ground.rotateX(Math.PI / 2);\n      this.scene.add(this.ground);\n    }\n    this.ground.visible = enable;\n  }\n\n  private layer: THREE.Plane;\n  private layerHelper: THREE.PlaneHelper;\n\n  public showLayer(enable: boolean) {\n    this.layerHelper.visible = enable;\n    _.each(this.slice, (slice: THREE.Object3D) => {\n      slice.visible = enable;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as THREE from 'three';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StlLoaderService {\n\n  /**\n   * @author aleeper / http://adamleeper.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author gero3 / https://github.com/gero3\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n   *\n   * Supports both binary and ASCII encoded files, with automatic detection of type.\n   *\n   * The loader returns a non-indexed buffer geometry.\n   *\n   * Limitations:\n   *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n   *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n   *  ASCII decoding assumes file is UTF-8.\n   *\n   * Usage:\n   *  var loader = new THREE.STLLoader();\n   *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n   *    scene.add( new THREE.Mesh( geometry ) );\n   *  });\n   *\n   * For binary STLs geometry might contain colors for vertices. To use it:\n   *  // use the same code to load STL as above\n   *  if (geometry.hasColors) {\n   *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n   *  } else { .... }\n   *  var mesh = new THREE.Mesh( geometry, material );\n   */\n\n  private manager: any;\n\n  constructor() {\n  }\n\n  public loadStl(scene: THREE.Scene, url, onLoadStl: (geometry: THREE.BufferGeometry) => void, onProgress, onError) {\n    this.load(url, (geometry) => {\n      onLoadStl(geometry);\n    })\n  }\n\n  private load(absoluteFileName, onLoad, onProgress?, onError?) {\n    let that = this;\n    // Loading tar file with an ajax request\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", absoluteFileName, true);\n    xhr.responseType = \"arraybuffer\";\n    xhr.onreadystatechange = function() {\n      if(this.readyState == this.DONE) {\n        if(xhr.status == 200) {\n          var byteArray = new Uint8Array(this.response);\n          let geometry = that.parse(this.response);\n          onLoad(geometry);\n        } else {\n          throw new Error(\"Error HTTP \" + xhr.status + \" when loading file : \" + absoluteFileName);\n        }\n      }\n    };\n    xhr.send(null);\n  }\n\n  private parse(data): THREE.BufferGeometry {\n\n    var isBinary = () => {\n\n      var expect, face_size, n_faces, reader;\n      reader = new DataView(binData);\n      face_size = (32 / 8 * 3) + ((32 / 8 * 3) * 3) + (16 / 8);\n      n_faces = reader.getUint32(80, true);\n      expect = 80 + (32 / 8) + (n_faces * face_size);\n\n      if (expect === reader.byteLength) {\n\n        return true;\n\n      }\n\n      // An ASCII STL data must begin with 'solid ' as the first six bytes.\n      // However, ASCII STLs lacking the SPACE after the 'd' are known to be\n      // plentiful.  So, check the first 5 bytes for 'solid'.\n\n      // US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\n      var solid = [115, 111, 108, 105, 100];\n\n      for (var i = 0; i < 5; i++) {\n\n        // If solid[ i ] does not match the i-th byte, then it is not an\n        // ASCII STL; hence, it is binary and return true.\n\n        if (solid[i] != reader.getUint8(i, false)) return true;\n\n      }\n\n      // First 5 bytes read \"solid\"; declare it to be an ASCII STL\n      return false;\n\n    };\n\n    var binData = this.ensureBinary(data);\n\n    return isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n  }\n\n  private parseBinary(data): THREE.BufferGeometry {\n\n    var reader = new DataView(data);\n    var faces = reader.getUint32(80, true);\n\n    var r, g, b, hasColors = false, colors;\n    var defaultR, defaultG, defaultB, alpha;\n\n    // process STL header\n    // check for default color in header (\"COLOR=rgba\" sequence).\n\n    for (var index = 0; index < 80 - 10; index++) {\n\n      if ((reader.getUint32(index, false) == 0x434F4C4F /*COLO*/) &&\n        (reader.getUint8(index + 4) == 0x52 /*'R'*/) &&\n        (reader.getUint8(index + 5) == 0x3D /*'='*/)) {\n\n        hasColors = true;\n        colors = [];\n\n        defaultR = reader.getUint8(index + 6) / 255;\n        defaultG = reader.getUint8(index + 7) / 255;\n        defaultB = reader.getUint8(index + 8) / 255;\n        alpha = reader.getUint8(index + 9) / 255;\n\n      }\n\n    }\n\n    let dataOffset = 84;\n    let faceLength = 12 * 4 + 2;\n\n    let geometry = new THREE.BufferGeometry();\n\n    let vertices = [];\n    let normals = [];\n\n    for (var face = 0; face < faces; face++) {\n\n      let start = dataOffset + face * faceLength;\n      let normalX = reader.getFloat32(start, true);\n      let normalY = reader.getFloat32(start + 4, true);\n      let normalZ = reader.getFloat32(start + 8, true);\n\n      if (hasColors) {\n\n        let packedColor = reader.getUint16(start + 48, true);\n\n        if ((packedColor & 0x8000) === 0) {\n\n          // facet has its own unique color\n\n          r = (packedColor & 0x1F) / 31;\n          g = ((packedColor >> 5) & 0x1F) / 31;\n          b = ((packedColor >> 10) & 0x1F) / 31;\n\n        } else {\n\n          r = defaultR;\n          g = defaultG;\n          b = defaultB;\n\n        }\n\n      }\n\n      for (var i = 1; i <= 3; i++) {\n\n        var vertexstart = start + i * 12;\n\n        vertices.push(reader.getFloat32(vertexstart, true));\n        vertices.push(reader.getFloat32(vertexstart + 4, true));\n        vertices.push(reader.getFloat32(vertexstart + 8, true));\n\n        normals.push(normalX, normalY, normalZ);\n\n        if (hasColors) {\n\n          colors.push(r, g, b);\n\n        }\n\n      }\n\n    }\n\n    geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(vertices), 3));\n    geometry.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(normals), 3));\n\n    if (hasColors) {\n      geometry.addAttribute('color', new THREE.BufferAttribute(new Float32Array(colors), 3));\n      // geometry.hasColors = true;\n      // geometry.alpha = alpha;\n    }\n\n    return geometry;\n\n  }\n\n  private parseASCII(data): THREE.BufferGeometry {\n\n    let geometry, length, patternFace, patternNormal, patternVertex, result, text;\n    geometry = new THREE.BufferGeometry();\n    patternFace = /facet([\\s\\S]*?)endfacet/g;\n\n    let vertices = [];\n    let normals = [];\n\n    let normal = new THREE.Vector3();\n\n    while ((result = patternFace.exec(data)) !== null) {\n\n      text = result[0];\n      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n      while ((result = patternNormal.exec(text)) !== null) {\n\n        normal.x = parseFloat(result[1]);\n        normal.y = parseFloat(result[3]);\n        normal.z = parseFloat(result[5]);\n\n      }\n\n      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n      while ((result = patternVertex.exec(text)) !== null) {\n\n        vertices.push(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n        normals.push(normal.x, normal.y, normal.z);\n\n      }\n\n    }\n\n    geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(vertices), 3));\n    geometry.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(normals), 3));\n\n    return geometry;\n  }\n\n  private ensureString(buf) {\n\n    if (typeof buf !== \"string\") {\n\n      var array_buffer = new Uint8Array(buf);\n      var strArray = [];\n      for (var i = 0; i < buf.byteLength; i++) {\n\n        strArray.push(String.fromCharCode(array_buffer[i])); // implicitly assumes little-endian\n\n      }\n      return strArray.join('');\n\n    } else {\n\n      return buf;\n\n    }\n\n  }\n\n  private ensureBinary(buf) {\n\n    if (typeof buf === \"string\") {\n\n      var array_buffer = new Uint8Array(buf.length);\n      for (var i = 0; i < buf.length; i++) {\n\n        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\n      }\n      return array_buffer.buffer || array_buffer;\n\n    } else {\n\n      return buf;\n\n    }\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}